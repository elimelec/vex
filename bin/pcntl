#!/usr/bin/perl
##
## Copyright (C) 1994 - 2005 Hewlett-Packard Company.
##
## The information and source code contained herein is the exclusive
## property of Hewlett-Packard Company and may not be reproduced
## in whole or in part without explicit written authorization from
## the company. See "<vexroot>/LICENSE.txt" for license terms.
##

##
## Author: Paolo Faraboschi, HPL
##
## $Id: pcntl,v 1.3 2007/06/29 10:22:47 frb Exp $
##
## [Automatically generated by a2p]

eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
    if $running_under_some_shell;
			# this emulates #! processing on NIH machines.
			# (remove #! line above if indigestible)

eval '$'.$1.'$2;' while $ARGV[0] =~ /^([A-Za-z_0-9]+=)(.*)/ && shift;
			# process any FOO=bar switches

$[ = 1;			# set array base to 1

while (<>) {
    ($Fld1,$Fld2) = split(' ', $_, 9999);
    if (/^\.proc/) {
	$_ = &Getline0();
	$_ = &Getline0();
	$p_oper = 0;
	$p_copy = 0;
	$p_inst = 0;
	$p_nop = 0;
	$curr_proc = $Fld1;
        if (not ($FUNC and $FUNC ne $curr_proc)) {
	    printf "Procedure: %s\n", $curr_proc;
	    printf "%6s %6s %6s %6s %6s %6s\n", 'Trace', 'IPC', 'Cycles', 'Oper', 'Copy', 'Nop';
	    printf (("-----------------------------------------\n"));
        }
    }
    if (/^\.endp/) {
	&print_trace_info();
	$trace = 0;
        if ($p_inst > 0 && not $TRACE) {
	    printf "Operations   = %d\n", $p_oper;
	    printf "Instructions = %d\n", $p_inst;
	    printf "Reg. moves   = %d\n", $p_copy;
	    printf "Nops         = %d\n", $p_nop;
	    printf "Avg ILP = %g\n", $p_oper / $p_inst;
        }
    }
    if (/^\.trace/) {
	if ($trace) {
	    &print_trace_info();
	}
	$t_inst = 0;
	$t_oper = 0;
	$t_copy = 0;
	$t_nop = 0;
	$is_nop = 0;
	$trace++;
	$curr_trace = $Fld2;
    }
    if (/xnop/) {
	$t_nop += $Fld2;
	$t_inst += $Fld2;
    }

    if ($Fld1 eq ';;') {
	$t_inst++;
	$t_nop += $is_nop;
	$is_nop = 1;
    }
    elsif (substr($Fld1, 3, 1) eq '=') {
	$t_copy++;
	$is_nop = 0;
    }
    elsif (substr($Fld1, 1, 1) eq 'c') {
	$t_oper++;
	$is_nop = 0;
    }
}

sub print_trace_info {
    return if ($TRACE and $TRACE ne $curr_trace);
    return if ($FUNC and $FUNC ne $curr_proc);
    printf "%6d %6.2f %6d %6d %6d %6d\n", $curr_trace, $t_oper / $t_inst,

      $t_inst, $t_oper, $t_copy, $t_nop;
    $p_oper += $t_oper;
    $p_copy += $t_copy;
    $p_inst += $t_inst;
    $p_nop += $t_nop;
}

sub Getline0 {
    if ($getline_ok = (($_ = <>) ne '')) {
	($Fld1,$Fld2) = split(' ', $_, 9999);
    }
    $_;
}
